name: Sync Fork Master with Upstream (No Unrelated Histories)

on:
  schedule:
    - cron: "*/30 * * * *" # Every 30 minutes
  workflow_dispatch: # Allow manual triggering

jobs:
  sync-and-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      - name: Add Upstream Remote
        run: |
          git remote add upstream https://github.com/simple-login/app.git

      - name: Fetch Upstream Master
        run: |
          git fetch upstream master

      - name: Merge Upstream Master into Local Master
        id: merge_step
        run: |
          git checkout master
          git merge upstream/master
        continue-on-error: true # Allow merge to fail, but continue

      - name: Commit Merge Changes (if any)
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            git push origin master
          elif git diff --name-only --diff-filter=U | read -r file; then
            git add .
            git commit -m "Merge upstream/master with conflicts"
            git push origin master
          fi
        env:
          GH_TOKEN: ${{ secrets.FORK_PAT }}

      - name: Create Pull Request
        id: pr_step
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            gh pr create --title "Merge upstream/master" --body "Merged from upstream [simple-login/app](https://github.com/simple-login/app) to [martadams89/sl-app](https://github.com/martadams89/sl-app)." --base master --head ${{ github.actor }}:master
          elif git diff --name-only --diff-filter=U | read -r file; then
            gh pr create --title "Merge upstream/master with conflicts" --body "Please resolve the merge conflicts." --base master --head ${{ github.actor }}:master
          fi
        env:
          GH_TOKEN: ${{ secrets.FORK_PAT }}

      - name: Auto approve and merge if no conflicts
        if: steps.merge_step.outcome == 'success' && steps.pr_step.outputs.pull-request-url
        run: |
          gh pr review --approve "${{ steps.pr_step.outputs.pull-request-url }}"
          gh pr merge --squash "${{ steps.pr_step.outputs.pull-request-url }}"
        env:
          GH_TOKEN: ${{ secrets.FORK_PAT }}

      - name: Job Status
        run: echo "üçè This job's status is ${{ job.status }}."